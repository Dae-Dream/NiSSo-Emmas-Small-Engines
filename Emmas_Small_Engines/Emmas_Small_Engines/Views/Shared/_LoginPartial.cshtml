@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{
		<!--if (User.IsInRole("Admin") || User.IsInRole("Owner"))
		{
			
			<li class="nav-item">
				<a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">User Settings</a>
			</li>
			
			<li class="nav-item">
				<a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register">Register New User</a>
			</li>
		}-->
		<li class="nav-item">

			<form asp-controller="Home" asp-action="Logout" method="post">
				<button type="submit" class="btn btn-link nav-link text-light">Logout</button>
			</form>
		</li>
	}
	else
	{
		@if (User.Identity.Name.Contains("admin"))
		{
			<li class="nav-item">
				<a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register">Register</a>
			</li>
		}
		<li class="nav-item">
			<a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Login</a>
		</li>
	}
</ul>
