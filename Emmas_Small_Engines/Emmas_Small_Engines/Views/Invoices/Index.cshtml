@model IEnumerable<Emmas_Small_Engines.Models.Invoice>

@{
    ViewData["Title"] = "Receipts";
}

<div class="d-flex flex-row gap-2" style="margin-top:180px;">
    <div class="col-auto text-nowrap flex-grow-0">
        <h5 class="display-5">Receipts </h5>
    </div>
    <div class=" col-auto flex-grow-1">
        <h5 class="d-inline display-5 text-muted">- Home</h5>
    </div>
</div>

<hr class="mb-5 mt-0" />

<div class="container shadow mt-5 pb-2 bg-light bg-gradient">
    <form asp-action="Index" method="get">
        <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
        <input type="hidden" name="sortField" value="@ViewData["sortField"]" />

        <div class="form-horizontal d-flex justify-content-center w-100">
            <div class="row mx-3 bg-light">
                <div class="col-md-5 form-group text-nowrap mt-5 mb-2 " style="width: 500px;">
                    <label>Search Receipts:</label>
                    @Html.TextBox("searchString", null, new { @class = "form-control mb-3 mt-1", placeholder="Search By Customer, Employee or Description" })
                </div>
                <div class="col-auto me-auto align-self-end form-group">
                    <input type="submit" name="actionButton" value="Filter" class="btn btn-outline-primary mb-2" />
                    <a asp-action="Index" class="btn btn-outline-danger mb-2">Clear</a>
                </div>
            </div>
        </div>

        <table class="table w-75 mx-auto text-center text-nowrap table-striped shadow ">
            <thead class="bg-dark align-middle">
                <tr>
                    <th>
                        <input type="submit" name="actionButton" value="@Html.DisplayNameFor(model => model.Customer)" class="btn btn-link link-light" />
                    </th>
                    <th>
                        <input type="submit" name="actionButton" value="@Html.DisplayNameFor(model => model.Date)" class="btn btn-link link-light" />
                    </th>
                    <th>
                        <input type="submit" name="actionButton" value="@Html.DisplayNameFor(model => model.Employee)" class="btn btn-link link-light" />
                    </th>
                    <th>
                        <input type="submit" name="actionButton" value="Products" class="btn btn-link link-light" style="pointer-events: none; text-decoration: none;" />
                    </th>
                    <th>
                        <input type="submit" name="actionButton" value="@Html.DisplayNameFor(model => model.Description)" class="btn btn-link link-light" />
                    </th>
                    <th>
                        <input type="submit" name="actionButton" disabled value="Action" class="btn btn-link link-light text-decoration-none" />

                    </th>
                </tr>
            </thead>
            <tbody class="bg-light">
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Customer.FirstName) @Html.DisplayFor(modelItem => item.Customer.LastName)
                        </td>
                        <td>
                            @Html.Raw(item.Date.ToString("yyyy-MMM-dd"))
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Employee.FirstName) @Html.DisplayFor(modelItem => item.Employee.LastName)
                        </td>
                        <td>
                            @{
                                int prodCount = item.InvoiceLines.Count;
                                if (prodCount > 0)
                                {
                                    string firstLine = item.InvoiceLines.OrderBy(e => e.Inventory.Name).FirstOrDefault().Inventory.Name;
                                    if (prodCount > 1)
                                    {
                                        string prodList = "";
                                        var c = item.InvoiceLines.OrderBy(e => e.Inventory.Name).Select(e => e.Inventory).ToList();
                                        for (int i = 1; i < prodCount; i++) // Skip the first because we have it already
                                        {
                                            prodList += c[i].Name + " <br />";
                                        }
                                        <a class="" role="button" data-bs-toggle="collapse" href="#collapseHistory@(item.ID)"
                                           aria-expanded="false" aria-controls="collapseHistory@(item.ID)">
                                            @firstLine <span class="badge bg-info">@prodCount</span>
                                        </a>
                                        <div class="collapse" id="collapseHistory@(item.ID)">
                                            @Html.Raw(prodList)
                                        </div>
                                    }
                                    else
                                    {
                                        @firstLine
                                    }
                                }
                                else
                                {
                                    <text>None</text>
                                }
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            <a title="View Receipt" asp-action="Receipt" asp-route-id="@item.ID" class="text-info">
                                <i class="bi bi-eye-fill" style="font-size:1rem;"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <partial name="_PagingNavBar" />
    </form>
</div>
